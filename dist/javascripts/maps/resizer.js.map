{"version":3,"sources":["resizer.coffee"],"names":[],"mappings":"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","file":"resizer.js","sourceRoot":"/source/","sourcesContent":["# Todo: minimize elements needed by using 'states' classes\n# Todo: validate URL before starting.\n# Todo: add animation speed as option\n# Todo: support px and em\n# Todo: pretty it up, restructure styles\n# Todo: draggable edge\n# Todo: prebuilt styles\n# Todo: chrome extension?\n# Todo: icon font for symbols? font squirrel, etc\n# Todo: better url management. urls for about/confg ?\n# Todo: refresh shenanigans causing starts\n# Todo: keyboard shortcuts going crazy when not on animating page.\n# Todo: give height options/restrictions ?\n# Todo: question mark shows keyboard shotcut menu\n    # - http://www.impressivewebs.com/questionmark-js-shortcut-keys-displayed/\n\nclass Resizive\n\n    elementSelectors:\n        templateLinks: 'a[data-template]'\n        render: '.render'\n        loadButton: '.btn-load'\n        startButton: '.btn-start'\n        endButton: '.btn-end'\n        pauseButton: '.btn-pause'\n        resumeButton: '.btn-resume'\n        minusButton: '.btn-minus'\n        plusButton: '.btn-plus'\n        helpButton: '.button-help'\n        showWidth: '.show-width'\n        resizer: '.resizer'\n        header: '.header'\n        url: '.url-entry'\n        img: '.loading'\n        body: 'body'\n\n    elements: {}\n\n    data:\n        templates: []\n        url: null\n        timer: null\n        paused: false\n        resizing: false\n        classResize: 'resizing'\n        classPause: 'paused'\n        enterKey: 13\n        direction: -1\n        stepDuration: 50\n        stepIncrememnt: 10\n        animationDuration: 100\n        animationIncrement: 50\n        minWidth: 320\n        currWidth: $(window).width()\n        maxWidth: $(window).width()\n\n    constructor: ->\n        @assignElements()\n        @parseTemplates()\n        @setBindings()\n        query = @parseQueryString()\n        if query\n            @render 'animating'\n            @start query\n        else\n            @render 'home', {url: ''}\n\n        @verticalDragger = new Dragdealer('resize-control.vertical', {\n            horizontal: false\n            vertical: true\n        })\n\n        @horizontalDragger = new Dragdealer('resize-control.horizontal', {\n            horizontal: true\n            vertical: false\n        })\n\n    assignElements: ->\n        for element, selector of @elementSelectors\n            el = @elements[element]\n            @elements[element] = $ selector if not el or el.length is 0\n\n    parseTemplates: ->\n        templates = [\n            'animating-template'\n            'home-template'\n            'about-template'\n            'config-template'\n        ]\n        @parseTemplate template for template in templates\n\n    parseTemplate: (t) ->\n        $t = $ '#' + t\n        @data.templates[t] = window.Hogan.compile($t.html())\n\n    render: (template, context, bodyClass) ->\n        template = template + '-template'\n        contents = @data.templates[template].render(context)\n        @elements.render.html contents\n        if bodyClass then @elements.body.removeClass().addClass bodyClass\n        @assignElements()\n\n    setBindings: ->\n        $(window).resize => @updateMaxWidth\n        @elements.body.on 'click', @elementSelectors.templateLinks, (event) =>\n            event.preventDefault()\n            $t = $ event.target\n            bodyClass = $t.data('class')\n            template = $t.data('template')\n            @render template, {}, bodyClass\n        @elements.body.on 'click', @elementSelectors.loadButton, => @load()\n        @elements.body.on 'click', @elementSelectors.startButton, => @start()\n        @elements.body.on 'click', @elementSelectors.endButton, => @end()\n        @elements.body.on 'click', @elementSelectors.pauseButton, => @pause()\n        @elements.body.on 'click', @elementSelectors.resumeButton, => @resume()\n        @elements.body.on 'click', @elementSelectors.plusButton, => @plus()\n        @elements.body.on 'click', @elementSelectors.minusButton, => @minus()\n        @elements.body.on 'keydown', @elementSelectors.url, (e) =>\n            e.stopPropagation()\n             # pass explicit false to show no query data and avoid auto\n            @start false if e.which is @data.enterKeypause\n        @elements.body.on 'blur', @elementSelectors.showWidth, =>\n            @setWidth()\n        @elements.body.on 'keydown', @elementSelectors.showWidth, (e) =>\n            e.stopPropagation()\n            if e.which is @data.enterKey\n                # prevent carriage return with preventDefault\n                e.preventDefault()\n                @elements.showWidth.blur()\n        @setKeyBindings()\n\n    setKeyBindings: ->\n        @k ?= window.Keyboard\n        @k.bind 's', 'keydown', => @start.bind @\n        @k.bind 'e', 'keydown', => @end.bind @\n        @k.bind 'p', 'keydown', => @pause.bind @\n        @k.bind 'r', 'keydown', => @resume.bind @\n        @k.bind ['down', 'left', '-'], 'keydown', => @minus.bind @\n        @k.bind ['up', 'right', '+'], 'keydown', => @plus.bind @\n\n    parseQueryString: ->\n        params = @getQueryString()\n        if params.hasOwnProperty('url') and params.hasOwnProperty('width')\n            if params.url isnt '' and not isNaN(params.width)\n                @elements.url.val params.url\n                @data.currWidth = parseInt(params.width, 10)\n                @elements.showWidth.text(params.width + 'px').blur()\n            return true\n        false\n\n    getQueryString: ->\n        result = {}\n        queryString = window.location.hash.toString().substring(1)\n        regex = /([^&=]+)=([^&]*)/g\n        matches = undefined\n        # while the regex finds matches in a xxx=yyy format,\n        # it splits & parses them up\n        matches = regex.exec(queryString)\n        while matches\n            # also decodes them in case they are URI encoded\n            decode = decodeURIComponent\n            result[decode(matches[1])] = decode(matches[2])\n            matches = regex.exec(queryString)\n        @data.url = result.url\n        result\n\n    load: () ->\n        @elements.body.addClass @data.classResize\n        @elements.img.removeClass 'hidden'\n        @data.url = @data.url or @elements.url.val()\n        @data.url = 'http://' + @data.url if @data.url.indexOf('://') is -1\n        @render('animating', {url: @data.url})\n        $(@elementSelectors.resizer).one 'load', =>\n            @elements.img.addClass 'hidden'\n            $('.resizer').removeClass('hidden').css\n                'height': 640\n                'width': 320\n            @keepInBounds false\n            @animator @data.animationDuration\n            @pause()\n        @data.paused = true\n        @data.resizing = false\n\n    start: (queryLoad) ->\n        @elements.body.addClass @data.classResize\n        @elements.img.removeClass 'hidden'\n        @data.url = @data.url or @elements.url.val()\n        @data.url = 'http://' + @data.url if @data.url.indexOf('://') is -1\n        @render('animating', {url: @data.url})\n        $(@elementSelectors.resizer).one 'load', =>\n            @elements.img.addClass 'hidden'\n            $('.resizer').removeClass('hidden').css\n                'height': $(window).height()\n            if queryLoad is true\n                @keepInBounds false\n                @animator @data.animationDuration\n                @pause()\n            else\n                @data.timer = setInterval(=>\n                    @resize 'animationDuration', 'animationIncrement'\n                , @data.animationDuration)\n        @data.paused = false\n        @data.resizing = true\n\n    end: ->\n        mw = @data.maxWidth\n        @elements.body.removeClass @data.classResize\n        clearInterval @data.timer\n        @elements.body.stop true, true\n        @elements.img.addClass 'hidden'\n        $(@elementSelectors.resizer).remove()\n        @elements.body.removeClass @data.classPause\n        # reset the direction\n        @data.direction = -1\n        # reset the width back to the current max viewport size\n        # for currWidth and actual body/header elements\n        @render('home', {url: @data.url})\n        @data.url = null\n        @data.currWidth = mw\n        @elements.body.width mw\n        @elements.header.width mw\n        @elements.showWidth.text mw + 'px'\n        window.location.hash = ''\n        @data.paused = false\n        @data.resizing = false\n\n    animator: (duration) ->\n        @elements.body.animate\n            width: @data.currWidth\n        , duration, =>\n            @elements.showWidth.text @data.currWidth + 'px'\n\n        url = encodeURIComponent(@elements.url.val())\n        query = '#url=' + url + '&width=' + encodeURIComponent(@data.currWidth)\n        window.location.hash = query\n\n\n    keepInBounds: (reset) ->\n        if @data.currWidth > @data.maxWidth\n            @data.currWidth = @data.maxWidth\n            @data.direction *= -1 if reset\n        else if @data.currWidth < @data.minWidth\n            @data.currWidth = @data.minWidth\n            @data.direction *= -1 if reset\n\n    minus: ->\n        @updateDirection -1\n        @resize 'stepDuration', 'stepIncrememnt'\n\n    pause: ->\n        @elements.body.addClass(@data.classPause).stop true, true\n        clearInterval @data.timer\n        @updateWidth @elements.body.width()\n        @data.paused = true\n\n    plus: ->\n        @updateDirection +1\n        @resize 'stepDuration', 'stepIncrememnt'\n\n    resize: (durationType, sizeType) ->\n        adjustment = @data[sizeType]\n        duration = @data[durationType]\n        reset = (if (durationType is 'stepDuration') then false else true)\n        startingWidth = @data.currWidth\n        @data.currWidth = @data.currWidth + (adjustment * @data.direction)\n        @keepInBounds reset\n        @animator duration if startingWidth isnt @data.currWidth\n\n    resume: ->\n        @elements.body.removeClass(@data.classPause).stop true, true\n        @data.timer = setInterval(=>\n            @resize 'animationDuration', 'animationIncrement'\n        , @data.animationDuration)\n        @data.paused = false\n\n    setWidth: ->\n        px = @elements.showWidth.text()\n        px = px.replace(' ', '').replace('px', '').replace('em', '')\n        startingWidth = @data.currWidth\n        if isNaN(px)\n            @elements.showWidth.text @data.currWidth + 'px'\n            return\n        @data.currWidth = parseInt(px, 10)\n        if @data.currWidth < startingWidth\n            @updateDirection -1\n        else\n            @updateDirection +1\n        @keepInBounds false\n        @animator @data.animationDuration if startingWidth isnt @data.currWidth\n\n    updateDirection: (dir) ->\n        @data.direction = dir\n\n    updateMaxWidth: ->\n        @data.max = $(window).width()\n\n    updateWidth: (w) ->\n        @data.currWidth = w\n        @elements.showWidth.text @data.currWidth + 'px'\n\n$ ->\n    window.resizive = new Resizive()\n"]}